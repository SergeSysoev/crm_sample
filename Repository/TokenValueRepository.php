<?php

namespace NaxCrmBundle\Repository;

/**
 * TokenValueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TokenValueRepository extends AbstractEntityRepository
{
    public function getList(array $request)
    {
        $order = 'l.`name`, g.`name`, t.`name`';
        $dir = 'ASC';
        $limit = '';

        $where = 'l.is_supported=1';
        if (empty($this->preFilters['empty'])) {
            $where .= ' AND v.translate IS NOT NULL';
        }
        if (!empty($request['filters'])) $filters = $request['filters'];

        if (!empty($request['order']['column'])) {
            $order = $request['order']['column'];
            $dir = !empty($request['order']['dir']) ? $request['order']['dir'] : 'ASC';
            switch ($order) {
                case 'language': $order = "l.`name`"; break;
                case 'group': $order = "g.`name`"; break;
                case 'token': $order = "t.`name`"; break;
                default: $order = "v.`$order`";
            }
        }
        $order = "ORDER BY $order $dir";

        if (!empty($request['limit'])) {
            $limit = "LIMIT ";
            if (!empty($request['offset'])) {
                $limit .= $request['offset'] . ',';
            }
            $limit .= $request['limit'];
        }
        $sql = "
            SELECT l.name AS `language`, l.code, g.name AS `group`, g.id groupId, l.id languageId, t.id tokenId, t.name as token, v.translate
            FROM `languages` l CROSS JOIN token_group g
            JOIN token t ON t.group_id=g.id AND t.deleted_at IS NULL
            LEFT JOIN token_value v ON v.token_id=t.id AND v.language_id=l.id AND v.deleted_at IS NULL
            WHERE $where AND g.deleted_at IS NULL
            $order
            $limit";

        $this->setSql($sql);
        return $this->fetchAll();
    }
}
